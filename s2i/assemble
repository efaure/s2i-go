#!/bin/bash
set -e

echo
echo "===> Build started at $(date)"
echo
START=$SECONDS

# Unconditionally print elapsed build time at exit
function finish {
  echo "===> Elapsed time: $(($SECONDS - $START)) seconds"
}
trap finish EXIT


if [ -n "$BUILD_SOURCE_PATH" ];  then
  SOURCE=$GOPATH/src/${BUILD_SOURCE_PATH}
else 
  SOURCE_SUB_FOLDER=$(echo $OPENSHIFT_BUILD_SOURCE | sed -n 's/.*\/\/\([^ ]*\)/\1/p' | sed 's/.git//g')
  SOURCE=$GOPATH/src/$SOURCE_SUB_FOLDER
fi


echo "---> Preparing source in ${SOURCE}..."
mkdir -p $SOURCE

cp -Rf /tmp/src/. $SOURCE

cd $SOURCE

if [ -f "Makefile" ]  &&  [ "${USE_MAKEFILE}" = "true" ]
then
    echo " Use make to build the go app"
    if [ $(grep -E "^build:" Makefile | wc -l) -eq 1 ] ; then
	  make build -n
	  make build
    else 
	  make -n
	  make
    fi
else
  echo "Use vanilla go get and go build"

  echo "---> Downloading dependencies..."
  go get -v ./...

  echo "---> Building application source..."
  go build -v -o main

  echo
fi
echo "===> Build completed at $(date)"

# Fix source directory permissions
[ -f "main" ] && chmod g+x main
[ -f "$(basename ${SOURCE})" ] && chmod g+x $(basename ${SOURCE})


echo "===> End of build"
